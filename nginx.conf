user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Environment variables disabled
# We are using hardcoded values instead

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    # TCP optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    sendfile_max_chunk 512k;
    
    # Buffer size for POST submissions
    client_body_buffer_size 10K;
    client_max_body_size 50M;
    
    # Buffer size for Headers
    client_header_buffer_size 1k;
    
    # Max time to receive client headers/body
    client_body_timeout 12;
    client_header_timeout 12;
    
    # Max time to keep a connection open
    keepalive_timeout 15;
    
    # Max time for the client accept/receive a response
    send_timeout 10;
    
    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    # Main domain
    server {
        listen 80;
        listen [::]:80;
        server_name slnnzmtl.xyz crm.slnnzmtl.xyz n8n.slnnzmtl.xyz kazansky.dev dev.slnnzmtl.xyz;
        
        # Redirect all HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;
        server_name slnnzmtl.xyz;

        ssl_certificate /etc/nginx/ssl/slnnzmtl.xyz/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/slnnzmtl.xyz/privkey.pem;

        location / {
            proxy_pass http://slnnzmtl-xyz-prod;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;
        server_name dev.slnnzmtl.xyz;

        ssl_certificate /etc/nginx/ssl/dev.slnnzmtl.xyz/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/dev.slnnzmtl.xyz/privkey.pem;

        location / {
            proxy_pass http://directus:8055;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Cookie and authorization header forwarding
            proxy_pass_header Authorization;
            proxy_pass_request_headers on;
            proxy_set_header Cookie $http_cookie;
            
            # Buffer settings for large requests
            proxy_buffering off;
            proxy_request_buffering off;
            
            # WebSocket support for Directus real-time features
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;
        server_name n8n.slnnzmtl.xyz;

        ssl_certificate /etc/nginx/ssl/n8n.slnnzmtl.xyz/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/n8n.slnnzmtl.xyz/privkey.pem;

        location / {
            proxy_pass http://n8n:5678;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;
        server_name crm.slnnzmtl.xyz;

        ssl_certificate /etc/nginx/ssl/crm.slnnzmtl.xyz/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/crm.slnnzmtl.xyz/privkey.pem;

        location / {
            proxy_pass http://espocrm-prod;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

   
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;
        server_name kazansky.dev;

        ssl_certificate /etc/nginx/ssl/kazansky.dev/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/kazansky.dev/privkey.pem;

        location / {
            proxy_pass http://slnnzmtl-xyz-prod;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # server {
    #     listen 443 ssl;
    #     listen [::]:443 ssl;
    #     http2 on;
    #     server_name stage.kazansky.dev;

    #     ssl_certificate /etc/nginx/ssl/kazansky.dev/fullchain.pem;
    #     ssl_certificate_key /etc/nginx/ssl/kazansky.dev/privkey.pem;

    #     location / {
    #         proxy_pass http://slnnzmtl-xyz-dev:5173;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
    # }

}